#################################
# SUPER RESTOCK & RESSUPLY
# v1.3.0
# by gugutz
#
#################################
# CREDITS :)
#
sysmsg '♥ SUPER RESTOCK & RESSUPLY by gugutz ♥' 55
#
#
@unsetvar gold_deposit_container_location
@unsetvar tomes_container_location
#
#################################
# CHANGELOG
#
# v1.3.0
# - Switches arcane rune list for regular generic type 'rune' for performance optimization
# - Detect bard templates and saves magical instruments (exceedingly and supremely) to get them back from recycler after dumping items
# - Changes script name to SUPER RESTOCK & RESSUPLY
#
# v1.2.0
# - Dump completed tmaps on ground instead of trying to put them inside tome
#
# v1.1.0
# - Adds currency list so script will also unload doublons along with gold
# - Adds 'verbose_mode' to control printing of messages
# - Greatly simplified script configuration for containers locations
#
# v1.0.4
# - Adds routine for smelting ores and making boards out of logs
#
# v1.0.0
# - First usable stable version release
#
# v0.0.1
# - Initial release

#################################
# CREATE ALL LISTS FOR CONFIG

if not listexists 'config_lists'
    createlist 'config_lists'
else
    clearlist 'config_lists'
endif

pushlist 'config_lists' 'verbose_mode'
pushlist 'config_lists' 'beta_client'
pushlist 'config_lists' 'unload_misc_items'
pushlist 'config_lists' 'unload_misc_items_container_location'
pushlist 'config_lists' 'gold_deposit_container_location'
pushlist 'config_lists' 'tomes_location'
pushlist 'config_lists' 'char_instrument'


foreach list in 'config_lists'
    if not listexists list
        createlist list
    else
        clearlist list
    endif
endfor


#################################
# CONFIGURATION

@setvar action_delay_var 300
@setvar sysmsgs_color 50

# print (or dont) informative sysmsgs and overhead msgs
pushlist 'verbose_mode' 'yes'
# use beta features (needs beta client)
pushlist 'beta_client' 'yes'
# choose if you also want to unload misc items (skill orbs,, rms, etc...)
pushlist 'unload_misc_items' 'yes'

# choose where to look for containers/tomes/vault (possible values: 'ground', 'subcontainer', 'master_container')
pushlist 'unload_misc_items_container_location' 'ground'
pushlist 'gold_deposit_container_location' 'none'
pushlist 'tomes_location' 'ground'


#################################
# CODE

if not listexists 'version_hash'
    createlist 'version_hash'
    pushlist 'version_hash' 'cm9sZGVyaWNr'
endif

# ##########################
# SEARCH FOR EVERY PACKANIMAL NEARBY WHOS NOTO IS SAME AS CHAR, TO RESTOCK FROM THEM
createlist 'packies'

while findtype 292 ground any any 2 as packie
    if noto packie = noto 'self'
        pushlist 'packies' packie
        overhead '*opening bag*' 56 packie
        dclick packie
        wait action_delay_var
    endif
    @ignore packie
endwhile

while findtype 291 ground any any 2 as packie
    if noto packie = noto 'self'
        pushlist 'packies' packie
        overhead '*opening bag*' 56 packie
        dclick packie
        wait action_delay_var
    endif
    @ignore packie
endwhile
clearignore

#################################
# IF PLAYER CHOSE TO USE ANY SUBCONTAINER
# WE NEED TO ASK HIM FOR THE MAIN CONTAINER THAT
# WILL HOLD THOSE SUBCONTAINERS, IF WE DIDNT ALREADY
# OR CANT FIND THAT CONTAINER CLOSE
#
if inlist 'unload_misc_items_container_location' 'subcontainer' or inlist 'gold_deposit_container_location' 'subcontainer' or inlist 'tomes_location' 'subcontainer'
    if not varexist main_unload_container or not find main_unload_container ground any any 2
        overhead 'select master unload container' sysmsgs_color
        sysmsg  '> Select Your Master Unload Container' sysmsgs_color
        @setvar main_unload_container
    endif
endif
#
# if player did select a main unload container,
# we open right now to find the other subcontainers player might use
#
if varexist main_unload_container
    useobject main_unload_container
    wait action_delay_var
endif


#
#################################
# SET MISC ITEMS UNLOAD CONTAINER
#
if inlist 'unload_misc_items_container_location' 'ground' or inlist 'unload_misc_items_container_location' 'master_container'
    @setvar misc_items_container_location 'ground'
elseif inlist 'unload_misc_items_container_location' 'subcontainer'
    @setvar misc_items_container_location main_unload_container
else
    @setvar misc_items_container_location 'ground'
endif

if inlist 'unload_misc_items_container_location' 'ground' or inlist 'unload_misc_items_container_location' 'subcontainer' or inlist 'unload_misc_items_container_location' 'master_container'
    if not varexist misc_items_container or not find misc_items_container misc_items_container_location any any 2
        @unsetvar misc_items_container
        overhead 'select your misc items container' sysmsgs_color
        sysmsg  '> Select Your Misc Items Container' sysmsgs_color
        @setvar misc_items_container
    endif
endif



#
#################################
# SET GOLD DEPOSIT CONTAINER IF NOT USING THE BANK DEPOSIT BOX
if inlist 'gold_deposit_container_location' 'ground' or inlist 'gold_deposit_container_location' 'master_container'
    @setvar gold_container_location 'ground'
elseif inlist 'gold_deposit_container_location' 'subcontainer'
    @setvar gold_container_location main_unload_container
else
    @setvar gold_container_location 'ground'
endif

if inlist 'gold_deposit_container_location' 'ground' or inlist 'gold_deposit_container_location' 'subcontainer' or inlist 'gold_deposit_container_location' 'master_container'
    if not varexist gold_deposit_container or not find gold_deposit_container gold_container_location any any 2
        @unsetvar gold_deposit_container
        overhead 'select your gold deposit container' sysmsgs_color
        sysmsg  '> Select Your Gold Deposit container' sysmsgs_color
        @setvar gold_deposit_container
    endif
endif


#
#################################
# SET TOMES CONTAINER
if inlist 'tomes_location' 'ground' or inlist 'tomes_location' 'master_container'
    @setvar tomes_container_location 'ground'
elseif inlist 'tomes_location' 'subcontainer'
    @setvar tomes_container_location main_unload_container
else
    @setvar tomes_container_location 'ground'
endif

if inlist 'tomes_location' 'subcontainer' or inlist 'tomes_location' 'master_container'
    if not varexist tomes_container or not find tomes_container tomes_container_location any any 2
        @unsetvar tomes_container
        overhead 'select your tomes container' sysmsgs_color
        sysmsg  '> Select Your Tomes Container' sysmsgs_color
        @setvar tomes_container
    endif
endif

if varexist tomes_container
    sysmsg '> Opening Tomes Containes' sysmsgs_color
    useobject tomes_container
    wait action_delay_var
endif

#
#################################
# USE DETECT HIDDEN EVERY 50s
#
if not timerexists 'detect_hidden_timer'
    settimer 'detect_hidden_timer' 50001
endif
clearsysmsg
if timer 'detect_hidden_timer' >= 50000
    sysmsg ">>> Detecting Hidden Thiefs..." sysmsgs_color
    while not insysmsg 'You search the home and find no one hiding within'
        useskill 'detectinghidden'
        wft 600
        target 'self'
    endwhile
    settimer 'detect_hidden_timer' 0
endif


#################################
# SAVE BARDING INSTRUMENT TO GET IT FROM RECYCLER AFTER UNLOADING
#

if skill 'musicianship' > 50 or skill 'peacemaking' >= 50 or skill 'discordance' >= 50 or skill 'provocation' >= 50
    if not listexists 'instruments'
        createlist 'instruments'
        pushlist 'instruments' 'lute'
        pushlist 'instruments' 'drums'
        pushlist 'instruments' 'tambourine'
        pushlist 'instruments' 'lap harp'
    endif

    foreach type in 'instruments'
        if findtype type backpack as instrument
            getlabel instrument instrument_label

            if exceedingly in instrument_label or supremely in instrument_label
                sysmsg 'Found And Saved Char Magical Instrument' 90
                pushlist 'char_instrument' instrument
                break
            endif
        endif
    endfor
endif

#################################
# MISC ITEMS (ITEMS WITHOUT SHELF/TOME ORGANIZER FOR THEM
#
if inlist 'unload_misc_items' 'yes'
    createlist 'misc_items'
    # skill orb
    pushlist 'misc_items' 22336
    # # mcd (this goes into the resource stockpile)
    # pushlist 'misc_items' 17087
    # research material
    pushlist 'misc_items' 29348
    # spell hue deeds
    pushlist 'misc_items' 5359
    # pushlist 'misc_items' 'seed of renewal'
    # pushlist 'misc_items' 'bag of seeds'

    if inlist 'unload_misc_items_container_location' 'ground' or inlist 'unload_misc_items_container_location' 'subcontainer'
        if not varexist misc_items_container or not find misc_items_container misc_items_container_location any any 2
            overhead 'cant find misc items container' 41
            sysmsg '> Cant Find Misc Items Container' sysmsgs_color
        else
            foreach item in 'misc_items'
                if findtype item backpack any any as item_to_unload
                    lift item_to_unload 999
                    wait action_delay_var
                    drop misc_items_container -1 -1 0
                    wait action_delay_var
                endif
            endfor
        endif
    endif
endif

#
#################################
# UNLOAD GOLD
#
if not listexists 'currency_types'
    createlist 'currency_types'
    pushlist 'currency_types' 'gold coin'
    # doublons
    pushlist 'currency_types' 'muffins'
endif

foreach currency_type in 'currency_types'
    while findtype currency_type backpack as currency

        if not varexist gold_deposit_container or not find gold_deposit_container gold_container_location any any 2
            if findtype 'bank deposit safe' gold_container_location any any 2 as deposit_box
                sysmsg '> Setting vault as gold deposit container' sysmsgs_color
                @setvar gold_deposit_container deposit_box
            endif
        endif

        # finally, if either player did set a container to store gold, or we found a vault on ground, we use that to drop gold on it
        if not find gold_deposit_container gold_container_location any any 2
            overhead 'cant find gold deposit container' 41
            sysmsg '> Cant Find gold deposit Container' sysmsgs_color
        elseif varexist gold_deposit_container and find gold_deposit_container gold_container_location any any 2
            if inlist 'verbose_mode' 'yes'
                if inlist 'beta_client' 'yes'
                    overhead 'Depositing {{currency_type}} in vault' 49
                    sysmsg 'Deposited {{currency_type}} in vault!' 49
                else
                    sysmsg ">>> DEPOSITING..." 150 'self'
                    overhead "*depositing...*" 56 'self'
                endif
            endif

            lift currency 60000
            wait action_delay_var
            # gold here has to be droped at -1 -1 0, or else is ends up 'inside' the vault, and not in the bank
            drop gold_deposit_container -1 -1 0
            wait action_delay_var

            if inlist 'verbose_mode' 'yes'
                if insysmsg 'You deposit'
                    if inlist 'beta_client' 'yes'
                        overhead 'deposited {{currency_type}} in vault' 49
                        sysmsg 'Deposited {{currency_type}} in vault!' 49
                        overhead 'deposited in vault:' 49
                        overhead currency_type 49
                        sysmsg '> Deposited In Vault:' 49
                        sysmsg currency_type 49
                    endif
                endif
            endif
        endif
    endwhile
endfor



# ###############################
# DEPOSIT GOLD FROM PACKIES
#
if list 'packies' > 0
    if not find gold_deposit_container gold_deposit_container_location any any 2
        overhead 'cant find gold deposit container' 41
        sysmsg '> Cant Find gold deposit Container' sysmsgs_color
    elseif varexist gold_deposit_container and find gold_deposit_container gold_deposit_container_location any any 2
        foreach packanimal in 'packies'
            while findtype 'gold coin' packanimal any any 2 as gold_from_packie
                if inlist 'verbose_mode' 'yes'
                    overhead '*unloading gold*' 49 packanimal
                    sysmsg '> Unloading Gold From Pack Animal' 49
                endif
                # we have to use 'lifttype' here cause only it supports specifying the item src, 'lift' doenst
                lift gold_from_packie 60000
                # lifttype 'gold coin' 60000 packanimal
                wait action_delay_var
                # gold here has to be droped at -1 -1 0, or else is ends up 'inside' the vault, and not in the bank
                drop gold_deposit_container -1 -1 0
                wait action_delay_var
            endwhile
        endfor
    endif
endif


# ###############################
# MINERS - UNLOAD ORES/INGOTS

while findtype 6585 backpack as ores_from_backpack
    if findtype 'forge' ground any any 2 or findtype 'large forge' ground any any 2
        if inlist 'verbose_mode' 'yes'
            overhead '*smelting ores*' 49 packanimal
            sysmsg '> Smelting Ores In Pack Animal' 49
        endif
        dclick ores_from_backpack
        wait action_delay_var
    else
        sysmsg 'Found Ores in backpack but no forge nearby to smelt it...' 40
        break
    endif
endwhile


# MINERS - UNLOAD ORES/INGOTS FROM PACKIES
# smelt ores or make boards from resources inside packies to deposit them in resource stockpile
if list 'packies' > 0
    foreach packanimal in 'packies'

        # smelt ores
        while findtype 6585 packanimal any any 2 as ores_from_packie
            if findtype 'forge' ground any any 2 or findtype 'large forge' ground any any 2
                if inlist 'verbose_mode' 'yes'
                    overhead '*smelting ores*' 49 packanimal
                    sysmsg '> Smelting Ores In Pack Animal' 49
                endif

                dclick ores_from_packie
                wait action_delay_var
            else
                sysmsg 'Found Ores in pack animal but no forge nearby to smelt it...' 40
                overhead 'found ores but no forge' 40 packanimal
                break
            endif
        endwhile

        # make boards from logs
        while findtype 'logs' packanimal any any 2 as logs_from_packie
            if inlist 'verbose_mode' 'yes'
                overhead '*making boards from logs*' 49 packanimal
                sysmsg '> Smelting Ores In Pack Animal' 49
            endif

            if findtype 'scissors' backpack as cutter
                dclick cutter
                wft action_delay_var
                if targetexists 'neutral'
                    target logs_from_packie
                endif
            else
                sysmsg 'NO SCISSORS TO MAKE BOARDS!' 44
            endif
        endwhile
    endfor
endif


# ###############################
# LUMBER - UNLOAD LOGS/BOARDS

# UNLOADING BOARDS AT HOME
# make boards from logs on backpack
while findtype 'log%s' backpack any any 2 as logs_from_backpack
    if inlist 'verbose_mode' 'yes'
        overhead '*making boards from logs*' 49 packanimal
        sysmsg '> Making boards from logs in backpack' 49
    endif

    if findtype 'hatchet' backpack or findtype 'hatchet' lefthand
        dclick logs_from_backpack
        wait action_delay
    elseif findtype 'scissors' backpack as cutter
        dclick cutter
        wft action_delay_var
        if targetexists 'neutral'
            target logs_from_backpack
        endif
    else
        sysmsg 'NO SCISSORS TO MAKE BOARDS!' 44
    endif
endwhile

# make boards from resources inside packies to deposit them in resource stockpile
if list 'packies' > 0
    foreach packanimal in 'packies'

        # make boards from logs
        while findtype 'log%s' packanimal any any 2 as logs_from_packie
            if inlist 'verbose_mode' 'yes'
                overhead '*making boards from logs*' 49 packanimal
                sysmsg '> Making boards from logs in pack animal' 49
            endif

            if findtype 'hatchet' backpack
                dclick logs_from_packie
                wait action_delay
            elseif findtype 'scissors' backpack as cutter
                dclick cutter
                wft action_delay_var
                if targetexists 'neutral'
                    target logs_from_packie
                endif
            else
                sysmsg 'NO SCISSORS TO MAKE BOARDS!' 44
            endif
        endwhile

    endfor
endif
#
# ###############################
# TREASURE MAPS
if findtype 'book' tomes_container_location 2990 1 2 as treasure_map_tome
    if findtype 'map' backpack 0 any as tmap

        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Treasure Maps...' sysmsgs_color
        endif

        while findtype 'map' backpack 0 any as tmap
            getlabel tmap tmap_label
            if "completed by" in tmap_label
                sysmsg "Dropping Completed Map On The Ground" sysmsgs_color
                overhead "dropping completed map"
                lift tmap 1
                wait action_delay_var
                droprelloc 0 0
            else
                lift tmap 1
                wait action_delay_var
                drop treasure_map_tome -1 -1 0
                wait action_delay_var
            endif
        endwhile

    endif
endif
#
# ###############################
# MINING MAPS
if findtype 'book' tomes_container_location 2796 1 2 as mining_map_tome
    if findtype 'map' backpack 2796 any as mining_map
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Mining Maps...' sysmsgs_color
        endif

        while findtype 'map' backpack 2796 any as mining_map
            lift mining_map 1
            wait action_delay_var
            drop mining_map_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif
endif
#
# ###############################
# LUMBER MAPS
if findtype 'book' tomes_container_location 2799 1 2 as lumber_map_tome
    if findtype 'map' backpack 2799 any as lumber_map
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Lumber Maps...' sysmsgs_color
        endif

        while findtype 'map' backpack 2799 any as lumber_map
            lift lumber_map 1
            wait action_delay_var
            drop lumber_map_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif
endif
#
# ###############################
# SKINNING MAPS
if findtype 'book' tomes_container_location 2651 1 2 as skinning_map_tome
    if findtype 'map' backpack 2651 any as skinning_map
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Skinning Maps...' sysmsgs_color
        endif

        while findtype 'map' backpack 2651 any as skinning_map
            lift skinning_map 1
            wait action_delay_var
            drop skinning_map_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif
endif
#
# ###############################
# FISHING MAPS
if findtype 'book' tomes_container_location 2722 1 2 as fishing_map_tome
    if findtype 'map' backpack 2904 any as fishing_map
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Fishing Maps...' sysmsgs_color
        endif

        while findtype 'map' backpack 2904 any as fishing_map
            lift fishing_map 1
            wait action_delay_var
            drop fishing_map_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif
endif


#
# ###############################
# SKILL SCROLLS
if findtype 'book' tomes_container_location 2963 1 2 as skill_scroll_tome
    if findtype 'scroll of calling' backpack any any as skill_scroll
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Skill Scrolls...' sysmsgs_color
        endif

        while findtype 'scroll of calling' backpack any any as skill_scroll
            lift skill_scroll 999
            wait action_delay_var
            drop skill_scroll_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif
endif

#
# ###############################
# ASPECT ITEMS
if findtype 'book' tomes_container_location 2618 1 2 as aspect_item_tome
    if findtype 'aspect core' backpack any any as core
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Aspect Cores' sysmsgs_color
        endif

        while findtype 'aspect core' backpack any any as core
            lift core 999
            wait action_delay_var
            drop aspect_item_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif

    # extract
    if findtype 3836 backpack any any as extract
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Aspect Extracts' sysmsgs_color
        endif

        while findtype 3836 backpack any any as extract
            lift extract 999
            wait action_delay_var
            drop aspect_item_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif

    # destils
    if findtype 17686 backpack any any as destil
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Aspect Destilations' 150
        endif

        while findtype 17686 backpack any any as destil
            sysmsg '> Unloading Aspect Destilations' 150
            lift destil 999
            wait action_delay_var
            drop aspect_item_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif

    # phylacteries
    if findtype 'phylactery' backpack any any as phyli
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Phyli'
        endif

        while findtype 'phylactery' backpack any any as phyli
            lift phyli 999
            wait action_delay_var
            drop aspect_item_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif

endif
#
# ###############################
# RARE CLOTHES
if findtype 'book' tomes_container_location 1495 1 2 as rare_cloth_tome
    if findtype 'folded cloth' backpack any any as piece_of_cloth
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Rare Cloths' sysmsgs_color
        endif

        while findtype 'folded cloth' backpack any any as piece_of_cloth
            lift piece_of_cloth 999
            wait action_delay_var
            drop rare_cloth_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif
endif
#
# ###############################
# DYES CLOTHES

if listexists 'dyes'
    removelist 'dyes'
endif

createlist 'dyes'
# runebook dye
pushlist 'dyes' 3838
# backpack dye
pushlist 'dyes' 3839
# headwear dye
pushlist 'dyes' 3842
# facial hair dye
pushlist 'dyes' 3843
# hair, shield and quiver dye
pushlist 'dyes' 3843
# fortuniture dye
pushlist 'dyes' 29025
# carpet dye
pushlist 'dyes' 29036

if findtype 'book' tomes_container_location 1494 1 2 as dyes_tome
    foreach dye in 'dyes'
        if findtype dye backpack any any as dye_bottle
            if inlist 'verbose_mode' 'yes'
                sysmsg '> Unloading Dyes' sysmsgs_color
            endif

            while findtype dye backpack any any as dye_bottle
                lift dye_bottle 999
                wait action_delay_var
                drop dyes_tome -1 -1 0
                wait action_delay_var
            endwhile
        endif
    endfor
endif
#
# ###############################
# INCRIPTION RUNES

# if listexists 'runes'
#     removelist 'runes'
# endif

# createlist 'runes'
# pushlist 'runes' 39891
# pushlist 'runes' 39892
# pushlist 'runes' 39917
# pushlist 'runes' 39909
# pushlist 'runes' 39912
# pushlist 'runes' 39905
# pushlist 'runes' 39911
# pushlist 'runes' 39897
# pushlist 'runes' 39918
# pushlist 'runes' 39889
# pushlist 'runes' 39898
# pushlist 'runes' 39896
# pushlist 'runes' 39916

if findtype 'book' tomes_container_location 2085 1 2 as runes_tome
    # foreach rune in 'runes'
    if findtype rune backpack any any as magic_rune
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Unloading Magic Runes' sysmsgs_color
        endif

        while findtype rune backpack any any as magic_rune
            lift magic_rune 999
            wait action_delay_var
            drop runes_tome -1 -1 0
            wait action_delay_var
        endwhile
    endif
    # endfor
endif
#
# ###############################
# REPAIR BENCH
if findtype 'repair bench' ground any any 2 as bench
    if inlist 'verbose_mode' 'yes'
        sysmsg "> Repairing Items..." sysmsgs_color 'self'
    endif

    dclick bench
    settimer 'waiting_repair_timer' 0
    while not insysmsg 'in need of repairs' and not insysmsg 'item' and not insysmsg 'items'
        wait 100
        if timer 'waiting_repair_timer' >= 3500 or insysmsg 'in need of repairs' or insysmsg 'item' or insysmsg 'items'
            if inlist 'verbose_mode' 'yes'
                sysmsg 'BREAKING REPAIR BENCH WHILE TEST'
            endif
            break
        endif
    endwhile
endif



# ##########################
# STORAGE SHELF
# first search for a shelf, save it and use it to restock
if findtype 'storage shelf' ground any any 2 as storageshelf
    @setvar storage_shelf storageshelf
    #overhead 'using shelf' 68 'shelf'
    if inlist 'verbose_mode' 'yes'
        sysmsg 'Restocking Storage Shelf...' sysmsgs_color
    endif

    menu storage_shelf 0
    wft 600
    if targetexists 'neutral'
        target 'self'
    endif
    waitforgump 3232825965 600
    if gumpexists 3232825965
        gumpclose
    endif

    # restock shelf from packies
    if list 'packies' > 0 and varexist storage_shelf
        foreach packanimal in 'packies'
            if inlist 'verbose_mode' 'yes'
                sysmsg '> Restocking Shelf From Pack Animal...' sysmsgs_color
            endif

            menu storage_shelf 0
            wft 600
            if targetexists 'neutral'
                if inlist 'verbose_mode' 'yes'
                    overhead "unloading on shelf" 56 packanimal
                endif

                target packanimal
            endif
        endfor
    endif

    if gumpexists 3232825965
        gumpclose
    endif
else
    if varexist storage_shelf
        @unsetvar storage_shelf
    endif
    overhead 'no shelfs nearby'
    
endif

#
# ##########################
# RESTOCK RESOURCE STOCKPILE
if findtype 'resource container' ground any any 2 as stockpile
    @setvar resource_stockpile stockpile
    menu resource_stockpile 0
    wft 600
    if targetexists 'neutral'
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Restocking Resource Stockpile...' sysmsgs_color
        endif

        target 'self'
    endif

    # restock stockpile from packies
    if list 'packies' > 0 and varexist resource_stockpile
        foreach packanimal in 'packies'
            if noto packanimal = noto 'self'
                if inlist 'verbose_mode' 'yes'
                    sysmsg '> Restocking Stockpile From Pack Animal...' sysmsgs_color
                endif

                menu resource_stockpile 0
                wft 600
                if targetexists 'neutral'
                    overhead "unloading on stockpile" 56 packanimal
                    target packanimal
                endif
            endif
        endfor
    endif
    if gumpexists 1859005118
        gumpclose
    endif
endif
#
# ##########################
# RESTOCK GARDEN SHELF
if findtype 'garden shelf' ground any any 2 as gardenshelf
    wft 600
    if targetexists 'neutral'
        if inlist 'verbose_mode' 'yes'
            sysmsg '> Restocking Garden Shelf...' sysmsgs_color
        endif

        target 'self'
    endif
    gumpclose
endif

#
# ##########################
# DUMP ITENS IN RECYCLER
if findtype 'ornate elven chest' ground any any 2 as recycler
@setvar recyclerbox recycler
    if inlist 'verbose_mode' 'yes'
        sysmsg "> Dumping items in recycler" sysmsgs_color
    endif

    useobject recycler
    waitforgump 4045111101
    gumpresponse 3
    waitfortarget
    target 'self'
    waitforgump 4045111101
    if gumpexists 4045111101
        gumpclose
    endif
endif
#
# ##########################
# FINALLY, RESSUPLY FROM SHELF
# waitforgump 3232825965 600
sysmsg '> Ressuplying From Storage Shelf...'
menu storage_shelf 1

waitforgump 3232825965 600

if gumpexists 3232825965
    gumpclose
endif


if atlist 'char_instrument' 0 as instrument
    while not find instrument backpack
        hotkey 'Grab Item'
        wft 1000
        if targetexists 'neutral'
            if inlist 'verbose_mode' 'yes'
                overhead 'getting instrument back'
                sysmsg 'Getting Char Instrument Back From Recycler'
            endif
            target instrument
            wait action_delay_var
        endif
    endwhile
endif

@removelist 'packies'
@clearignore
@clearsysmsg
