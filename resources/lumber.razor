sysmsg '#########################' 90
sysmsg '>>> LUMBERJACKING BOT' 55
sysmsg 'by gugutz' 45
sysmsg 'version 0.4' 31
sysmsg '########################' 90


#################################
# CHANGELOG
#
# v0.4
# - Adds missing list 'use_charges' for using charges when escaping PKs
#
# v0.3
# - Fix captcha pause check
# - Stops double clicking packie to open packpack when unloading ores while heavy
# - Adds variables to control rune slot button numbers while escaping PKs
# - Adds checks if char has magery or regs before trying to cast recall, or use scrolls / charges to escape PK
# - Fix colored logs check on journal messages
#
# v0.2
# - Adds unloading routine after escaping PKs and turn logs into boards
# - Makes sysmsgs checks even when gump is detected (so char can escape PKs even when answering gumps)
#
# v0.1
# - Initial release
#
#################################
# CREATE ALL LISTS FOR CONFIG
#
sysmsg 'Creating script lists'

if not listexists 'config_lists'
    createlist 'config_lists'
else
    clearlist 'config_lists'
endif

pushlist 'config_lists' 'auto_walk_randomly'
pushlist 'config_lists' 'packies'
pushlist 'config_lists' 'recall_to_escape_pks'
pushlist 'config_lists' 'pack_heavy'
pushlist 'config_lists' 'full_packies'
pushlist 'config_lists' 'auto_walk_to_direction'
pushlist 'config_lists' 'direction_to_walk'
pushlist 'config_lists' 'reset_last_sysmsg_timer'
pushlist 'config_lists' 'use_charges'
pushlist 'config_lists' 'use_recall_scroll'


foreach list in 'config_lists'
    if not listexists list
        createlist list
    else
        clearlist list
    endif
endfor


#################################
# SCRIPT CONFIGURATION
#
sysmsg 'Applying configuration...'

@setvar action_delay_var 600

# wait this much in milliseconds for sysmsgs to appear
# if we dont get any sysmsg for this much time, we probably got a gump
@setvar max_wait_for_last_sysmsg_to_use_hatchet  750
@setvar max_wait_for_last_sysmsg_to_suspect_gump 7000

# rune positions in either runetome or runebook
@setvar runetome_rune_position 100
@setvar runebook_rune_position 20

pushlist 'auto_walk_randomly' 'no'
pushlist 'auto_walk_to_direction' 'no'
pushlist 'direction_to_walk' 'right'
pushlist 'recall_to_escape_pks' 'yes'


###################################
# TIMERS
#
sysmsg 'Creating timers...'

createlist 'script_timers'
pushlist 'script_timers' 'waiting_save'
pushlist 'script_timers' 'last_sysmsg_timer'

foreach timer in 'script_timers'
    if not timerexists timer
        createtimer timer
        settimer timer 0
    endif
endfor


###################################
# PACK ANIMALS
#
sysmsg 'Searching for pack animals...' 87
createlist 'packies'

while findtype 292 ground any any 2 as packie
    if noto packie = noto 'self'
        pushlist 'packies' packie
        overhead '*opening bag*' 56 packie
        wait action_delay_var
    endif
    @ignore packie
endwhile

while findtype 291 ground any any 2 as packie
    if noto packie = noto 'self'
        pushlist 'packies' packie
        overhead '*opening bag*' 56 packie
        wait action_delay_var
    endif
    @ignore packie
endwhile
clearignore


###################################
# PREPARING TO START
#
if list 'packies' >= 1
    say 'all follow me'
endif

# check and equip axe if needed before starting so we dont waist the main timer equiping the axe
# which was causing the timer to be greater then the lumber timer and the char wouldnt mine when that happened
if lhandempty
    if not findtype 'hatchet' true
        overhead ":: You are out of hatchets::"
        wait 1500
        # script "WaitAndWatch"
    endif
    if findtype 'hatchet' true
        dclicktype 'hatchet'
        overhead "::equipped new hatchet::"
        wait action_delay_var
    endif
endif


###################################
# TRACKING - BEGIN HUNTING
#
setvar tracking_gump_id 4267467659

while not gumpexists tracking_gump_id
    sysmsg 'Opening tracking gump...' 53
    skill 'tracking'
    waitforgump tracking_gump_id 600
endwhile

if gumpexists tracking_gump_id
    if not ingump 'Stop Hunting' 4267467659
        overhead 'STARTING HUNTING' 65
        gumpresponse 6
        gumpclose
    else
        overhead 'already hunting' 55
    endif
endif

###################################
sysmsg 'Starting...' 87

clearsysmsg
settimer 'last_sysmsg_timer' 0

while not dead 'self'

    if timer 'last_sysmsg_timer' > max_wait_for_last_sysmsg_to_suspect_gump
        overhead "✩ GUMP or LAG ✩" 33
    endif

    if timer 'last_sysmsg_timer' < max_wait_for_last_sysmsg_to_suspect_gump
        # sysmsg 'Timer low...' 65

        if lhandempty
            if not findtype 'hatchet' true
                overhead ":: You are out of hatchets::"
                wait 1500
                # script "WaitAndWatch"
            endif
            if findtype 'hatchet' true
                dclicktype 'hatchet'
                overhead "::equipped new hatchet::"
                wait action_delay_var
            endif
        endif


        if timer 'last_sysmsg_timer' < max_wait_for_last_sysmsg_to_use_hatchet and not lhandempty
            sysmsg 'Lumbering...' 65
            hotkey 'Use item in Hand'
            waitfortarget action_delay_var
            target 'self'
            wait max_wait_for_last_sysmsg_to_use_hatchet
        endif


        # if heavy, empty logs in packies if there are any nearby
        if diffweight < 10
            while diffweight < 10

                if list 'packies' > 0
                    foreach packanimal in 'packies'
                        while findtype 'ore' backpack as ores
                            sysmsg 'MOVING ORE TO PACKIE' 56
                            overhead '*unloading ores*' 56
                            lift ores 999
                            wait action_delay_var
                            drop packanimal -1 -1 0
                            wait action_delay_var
                            # put this animal to the end of the list so we use the next one next time
                            poplist 'packies' packanimal
                            pushlist 'packies' packanimal 'back'
                            break
                        endwhile
                    endfor
                    @removelist 'packies'
                    clearignore
                endif
                overhead '! HEAVY !' 90
                organizer 1
                waitfortarget 1000
            endwhile
        endif

    endif




    ###############################################
    # JOURNAL MESSAGES CHECKS
    # we need to first check for pks or else the other msgs might not allow us to get to this check
    if insysmsg 'now tracking'
            sysmsg '>>> PK...' 54
            sysmsg '>>> PK...' 54
            sysmsg '>>> PK...' 54
            overhead '!! PK !!' 54
            overhead '!! PK !!' 54
            overhead '!! PK !!' 54

        if inlist 'recall_to_escape_pks' 'yes'
            sysmsg '>>> ESCAPING PK!!!' 41
            overhead '!! ESCAPING PK !!' 41


            if skill 'magery' == 0 or counttype "Black Pearl%s%" backpack == 0 or counttype "Blood Moss" backpack == 0 or counttype "Mandrake Root%s%" backpack == 0
                if counttype "Recall" backpack
                    overhead 'no regs. trying scroll...'
                    pushlist 'use_recall_scroll' 'yes'
                else
                    overhead 'no regs. trying charges...'
                    pushlist 'use_charges' 'yes'
                endif
            endif

            if findtype 'runetome' backpack as rtome
                if not inlist 'use_charges' 'yes'
                    hotkey 'Recall'
                    waitfortarget 3500
                    target rtome
                elseif inlist 'use_charges' 'yes'
                    dclick rtome
                    waitforgump 167090027 600
                    gumpresponse runetome_rune_position
                endif
            elseif findtype 'runebook' backpack as rbook
                if not inlist 'use_charges' 'yes'
                    hotkey 'Recall'
                    waitfortarget 3500
                    target rbook
                elseif inlist 'use_charges' 'yes'
                    dclick rbook
                    waitforgump 167090027 600
                    gumpresponse runebook_rune_position
                endif
            endif


            wait 1500

            sysmsg 'STARTING TO CUT LOGS INTO BOARDS TO UNLOAD...' 53

            # UNLOADING BOARDS AT HOME
            # make boards from logs on backpack
            while findtype 'logs' backpack any any 2 as logs_from_backpack
                overhead '*making boards from logs*' 49 packanimal
                sysmsg '> Making boards from logs in backpack' 49
                if findtype 'hatchet' backpack
                    dclick logs
                    wait action_delay
                elseif findtype 'scissors' backpack as cutter
                    dclick cutter
                    wft action_delay_var
                    if targetexists 'neutral'
                        target logs_from_backpack
                    endif
                else
                    sysmsg 'NO SCISSORS TO MAKE BOARDS!' 44
                endif
            endwhile

            # make boards from resources inside packies to deposit them in resource stockpile
            if list 'packies' > 0
                foreach packanimal in 'packies'

                    # make boards from logs
                    while findtype 'logs' packanimal any any 2 as logs_from_packie
                        overhead '*making boards from logs*' 49 packanimal
                        sysmsg '> Making boards from logs in pack animal' 49
                        if findtype 'hatchet' backpack
                            dclick logs
                            wait action_delay
                        elseif findtype 'scissors' backpack as cutter
                            dclick cutter
                            wft action_delay_var
                            if targetexists 'neutral'
                                target logs_from_packie
                            endif
                        else
                            sysmsg 'NO SCISSORS TO MAKE BOARDS!' 44
                        endif
                    endwhile

                endfor
            endif


            #
            # ##########################
            # RESTOCK RESOURCE STOCKPILE
            if findtype 'resource container' ground any any 2 as stockpile
                @setvar resource_stockpile stockpile
                menu resource_stockpile 0
                wft 600
                if targetexists 'neutral'
                    sysmsg '> Restocking Resource Stockpile...' sysmsgs_color
                    target 'self'
                endif

                # restock stockpile from packies
                if list 'packies' > 0 and varexist resource_stockpile
                    foreach packanimal in 'packies'
                        if noto packanimal = noto 'self'
                            sysmsg '> Restocking Stockpile From Pack Animal...' sysmsgs_color
                            menu resource_stockpile 0
                            wft 600
                            if targetexists 'neutral'
                                overhead "unloading on stockpile" 56 packanimal
                                target packanimal
                            endif
                        endif
                    endfor
                endif
                if gumpexists 1859005118
                    gumpclose
                endif
            endif




            stop
        endif



    # handle world saves
    elseif insysmsg "World is sav"
        overhead '*WORLD SAVING*' 90
        pushlist 'reset_last_sysmsg_timer' 'yes'
        while not insysmsg 'saved'
            wait 10
            if timer 'waiting_save' >= 5000
                sysmsg 'BREAKING WAITING FOR SAVE' 49
                break
            endif
        endwhile



    # no resources where char is
    elseif insysmsg "You do not see any harvestable resources nearby"
        if inlist 'auto_walk_to_direction' 'yes'
            foreach direction in 'direction_to_walk'
                walk direction
                break
            endfor
        endif

        pushlist 'reset_last_sysmsg_timer' 'yes'
        overhead '| NO WOOD HERE |' 54

        if inlist 'auto_walk_randomly' 'yes'
            random 8
            if insysmsg 'Random: 1'
                walk 'south'
                walk 'south'
                walk 'south'
            elseif insysmsg  'Random: 2'
                walk 'down'
                walk 'down'
                walk 'down'
            elseif insysmsg  'Random: 3'
                walk 'east'
                walk 'east'
                walk 'east'
            elseif insysmsg  'Random: 4'
                walk 'right'
                walk 'right'
                walk 'right'
            elseif insysmsg  'Random: 5'
                walk 'north'    
                walk 'north'
                walk 'north'
            elseif insysmsg  'Random: 6'
                walk 'up'
                walk 'up'
                walk 'up'
            elseif insysmsg  'Random: 7'
                walk 'west'
                walk 'west'
                walk 'west'
            elseif insysmsg  'Random: 8'
                walk 'left'
                walk 'left'
                walk 'left'
            endif
        endif




    # lumber fail message
    elseif insysmsg "You hack"
        pushlist 'reset_last_sysmsg_timer' 'yes'
        overhead ':: hacked ::'



    # when char is on cooldown for having traveled recently
    elseif insysmsg 'You have recently traveled and must wait'
        pushlist 'reset_last_sysmsg_timer' 'yes'
        overhead ':: Travel Cooldown ::' 53


    # action cooldowns (when sysmsg prints 'You must wait...') will break the macro, so we need to get them as well
    elseif insysmsg "You must wait to perform another action"
        pushlist 'reset_last_sysmsg_timer' 'yes'
        overhead ':: action cooldown ::' 53

    # action cooldowns (when sysmsg prints 'You must wait...') will break the macro, so we need to get them as well
    elseif insysmsg "Harvesting is not allowed in this area"
        pushlist 'reset_last_sysmsg_timer' 'yes'
        overhead 'harvest not allowed. move!' 53



    # I TRIED LOOPING THROUGH A LIST INSTEAD OF USING MULTIPLE IF/ELSE AND DIDNT WORK, THE LOOP BREAKS THE MACRO
    elseif insysmsg 'Dullwood'
        overhead ':: dullwood ::' 248
        pushlist 'reset_last_sysmsg_timer' 'yes'
    elseif insysmsg 'Shadowwood'
        overhead ':: shadowwood ::' 193
        pushlist 'reset_last_sysmsg_timer' 'yes'
    elseif insysmsg 'Copperwood'
        overhead ':: copperwood ::' 248
        pushlist 'reset_last_sysmsg_timer' 'yes'
    elseif insysmsg 'Bronzewood'
        overhead ':: bronzewood ::' 248
        pushlist 'reset_last_sysmsg_timer' 'yes'
    elseif insysmsg 'Goldenwood'
        overhead ':: goldenwood ::' 55
        pushlist 'reset_last_sysmsg_timer' 'yes'
    elseif insysmsg 'Rosewood'
        overhead ':: rosewood ::' 55
        pushlist 'reset_last_sysmsg_timer' 'yes'
    elseif insysmsg 'Verewood'
        overhead ':: verewood ::' 55
        pushlist 'reset_last_sysmsg_timer' 'yes'
    elseif insysmsg 'Valewood'
        overhead ':: valewood ::' 33
        pushlist 'reset_last_sysmsg_timer' 'yes'
    elseif insysmsg 'Avarwood'
        overhead ':: avarwood ::' 33
        pushlist 'reset_last_sysmsg_timer' 'yes'
    # regular logs have to be checked last because all of the above also have the word 'logs'
    # so it was always thinking it got regular logs, even when getting colored
    elseif insysmsg 'Logs'
        overhead ':: logs ::' 15
        pushlist 'reset_last_sysmsg_timer' 'yes'

    elseif insysmsg "Captcha successful"
        overhead 'captcha anwsered succesfully' 90
        sysmsg 'Captcha Anwsered Succesfully!' 90

    endif


    # check if we got any sysmsg that should reset the timer in each iteration
    if inlist 'reset_last_sysmsg_timer' 'yes'
        clearlist 'reset_last_sysmsg_timer'
        # RESET THE TIMER
        settimer 'last_sysmsg_timer' 0
        clearsysmsg
    endif





endwhile
