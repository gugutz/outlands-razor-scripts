sysmsg '#########################' 90
sysmsg '>>> LUMBERJACKING BOT' 55
sysmsg 'by gugutz' 45
sysmsg 'version 0.2.1' 31
sysmsg '########################' 90


#################################
# IN GAME INSTRUCTIONS / OBSERVATIONS
#################################
sysmsg '************************' 90
sysmsg 'FOR THIS SCRIPT TO WORK PROPERLY, YOU MUST:' 53
sysmsg "* uncheck option 'filter repeating system messages' on razor" 55
sysmsg "* uncheck option 'Auto Stack Ore/Fish/Logs at feet' on razor" 55
sysmsg "* first run far from other friends pack animals" 55
sysmsg '***********************' 90


###################################
# SCRIPT CONFIGURATION
###################################

sysmsg 'Applying configuration...'

setvar! debug 0

setvar! action_delay 600
setvar! recall_to_escape_pks 1

# escape rune button number on runebook
setvar! runetome_rune_position 100
# escape rune button number on runebook
setvar! runebook_rune_position 2

setvar! auto_walk_randomly 1

setvar! auto_walk_to_direction 0
# direction to walk to when 'auto_walk_to_direction' is ON!
if auto_walk_to_direction == 1 and not listexists 'direction_to_walk'
    createlist 'direction_to_walk'
    pushlist 'direction_to_walk' 'right'
endif

setvar! max_diffhits_before_buffing 5

setvar! 1st_circle_spell_mana_cost 8
setvar! 2nd_circle_spell_mana_cost 9
setvar! 3rd_circle_spell_mana_cost 10
setvar! 4th_circle_spell_mana_cost 12

setvar! spell_recovery_delay 180

###################################
# SCRIPT ROUTINE RELATED VARIABLES
# (USUALLY THERES NO NEED TO EDIT THESE)
###################################

# delay between pickaxes uses
setvar! max_wait_for_last_sysmsg_to_use_hatchet  1000

# delay before suspecting captcha gump
setvar! max_wait_for_last_sysmsg_to_suspect_gump 7000

setvar! max_wait_for_hatchet_target 2000

# max ores a packie can have before being set as full
setvar! max_ores_in_packie 380

setvar! max_diffhits_before_starting_heal_routine 0
setvar! max_diffhits_before_starting_defense_routine 2

# auto maintain char status settings
setvar! max_diffhits_before_healing_with_potion 20
setvar! max_diffhits_before_healing_with_magery 20
setvar! max_diffhits_before_healing_with_bandages 10
setvar! min_healing_to_use_bandages 30

setvar! max_diffweight_before_unloading 50

setvar! LOGS 7133
setvar! BOARDS 7127

setvar! max_mob_range_to_attack 2

if skill 'archery' >= 50
    setvar! max_mob_range_to_attack 12
endif


#####################################
# SUMMON SETTINGS
#####################################

if not listexists 'summons'
    createlist 'summons'
endif

clearlist 'summons'
pushlist 'summons' 'an earth elemental'
pushlist 'summons' 'a fire elemental'
pushlist 'summons' 'summ. creature'


if skill 'magery' > 90

    # SPELLS TO AUTO CAST
    setvar! use_reactive_armor 1
    setvar! use_magic_reflection 1

    setvar! auto_summon 1
    setvar! use_undead_summons 0
    setvar! auto_all_guard 1
    setvar! auto_patrol_when_no_active_lasttarget 0
    setvar! auto_vampiric_embrace 1
    setvar! patrol_first_relative_direction 0
    setvar! patrol_second_relative_direction -10
    setvar! find_summon_range 8
    
    setvar! use_mushroom_delay 60000
    setvar! all_guard_delay 15000
    setvar! all_patrol_delay 6000
    setvar! cast_summons_delay 6000
endif

# if summ creature is one of players summons, change limit to 5 so even with 4 followers, we still make the char cast to summon the fifth creature
# if not, then we just want 2 elementals so limit should be 4, since they take up 2 slots each and the fifth wouldnt be possible
if inlist 'summons' 'summ. creature'
    setvar! summon_max_limit 5
else
    setvar! summon_max_limit 4
endif

# SUMMONS SPELL LISTS
if not listexists 'summonspells'
    createlist 'summonspells'
endif
clearlist 'summonspells'

if inlist 'summons' 'an air elemental'
    @pushlist 'summonspells' 'air elemental'
endif
if inlist 'summons' 'an earth elemental'
    @pushlist 'summonspells' 'earth elemental'
endif
if inlist 'summons' 'a water elemental'
    @pushlist 'summonspells' 'water elemental'
endif
if inlist 'summons' 'a fire elemental'
    @pushlist 'summonspells' 'fire elemental'
endif
if inlist 'summons' 'a daemon'
    @pushlist 'summonspells' 'summon daemon'
endif
if inlist 'summons' 'an energy vortex'
    @pushlist 'summonspells' 'energy vortex'
endif
if inlist 'summons' 'a blade spirit'
    @pushlist 'summonspells' 'blade spirits'
endif
if inlist 'summons' 'summ. creature'
    @pushlist 'summonspells' 'summ. creature'
endif


###################################
# TIMERS
###################################

sysmsg 'Creating timers...'

createlist 'script_timers'
pushlist 'script_timers' 'waiting_save'
pushlist 'script_timers' 'last_sysmsg_timer'
pushlist 'script_timers' 'waiting_target_timer'
pushlist 'script_timers' 'bandage_timer'
pushlist 'script_timers' 'low_mana_for_summoning_warning_msg_timer'
pushlist 'script_timers' 'all_guard_timer'
pushlist 'script_timers' 'waiting_hatchet_target_timer'


foreach timer in 'script_timers'
    if not timerexists timer
        createtimer timer
        settimer timer 0
    endif
endfor


# this will make the script use bandage right at start if needed without having to wait for the bandage_delay first time
# settimer 'bandage_timer' bandage_delay


###################################
# POPULATE SOME LISTS
###################################


if not listexists 'resource_types'
    createlist 'resource_types'
    pushlist 'resource_types' LOGS
    pushlist 'resource_types' BOARDS
endif



if not listexists 'char_combat_skill_weapons'
    createlist 'char_combat_skill_weapons'
    if skill 'archery' >= 50
        pushlist 'char_combat_skill_weapons' 'bow'
        pushlist 'char_combat_skill_weapons' 'crossbow'
        pushlist 'char_combat_skill_weapons' 'heavy crossbow'
    # elseif skill 'swordsmanship' >= 50
    #     pushlist 'char_combat_skill_weapons' 'halberd'
    #     pushlist 'char_combat_skill_weapons' 'bardiche'
    #     pushlist 'char_combat_skill_weapons' 'katana'
    #     pushlist 'char_combat_skill_weapons' 'axe'
    #     pushlist 'char_combat_skill_weapons' 'viking sword'
    #     pushlist 'char_combat_skill_weapons' 'longsword'
    #     pushlist 'char_combat_skill_weapons' 'broadsword'
    #     pushlist 'char_combat_skill_weapons' 'double axe'
    #     pushlist 'char_combat_skill_weapons' "executioner's axe"
    elseif skill 'mace fighting' >= 50
        pushlist 'char_combat_skill_weapons' 'war mace'
        pushlist 'char_combat_skill_weapons' 'mace'
        pushlist 'char_combat_skill_weapons' 'club'
        pushlist 'char_combat_skill_weapons' 'black staff'
        pushlist 'char_combat_skill_weapons' 'gnarled staff'
        pushlist 'char_combat_skill_weapons' 'war hammer'
    endif
endif

###################################
# PACK ANIMALS
###################################

sysmsg 'Searching for pack animals...' 87
createlist 'packies'

while findtype 292 ground any any 2 as packie
    if noto packie = friend
        pushlist 'packies' packie
        overhead '*opening bag*' 56 packie
        wait action_delay
    endif
    @ignore packie
endwhile

while findtype 291 ground any any 2 as packie
    if noto packie = friend
        pushlist 'packies' packie
        overhead '*opening bag*' 56 packie
        wait action_delay
    endif
    @ignore packie
endwhile
clearignore


###################################
# PREPARING TO START
###################################

# set bandage_delay based on char dex
# if dex >= 100
#     sysmsg 'Setting bandage_delay to 10s' 53
#     setvar! bandage_delay 10000
# else
#     sysmsg 'Setting bandage_delay to 14s' 53
#     setvar! bandage_delay 14000
# endif


if list 'packies' >= 1
    say 'all follow me'
endif

# check and equip axe if needed before starting so we dont waist the main timer equiping the axe
# which was causing the timer to be greater then the lumber timer and the char wouldnt mine when that happened
if lhandempty or not findtype 'hatchet' lefthand
    if not findtype 'hatchet' true
        overhead "| You are out of hatchets|"
        wait 1500
    endif
    if findtype 'hatchet' true
        dclicktype 'hatchet'
        overhead "|equiped hatchet|"
        wait 1000
    endif
endif


###################################
# TRACKING - BEGIN HUNTING
###################################


if not varexist tracking_gump_id
    @setvar tracking_gump_id 4267467659
endif


if not findbuff 'Tracking Hunting'
    while not gumpexists tracking_gump_id
        sysmsg 'Opening tracking gump...' 53
        skill 'tracking'
        waitforgump tracking_gump_id 600
    endwhile

    if gumpexists tracking_gump_id
        if not ingump 'Stop Hunting' 4267467659
            overhead 'STARTING HUNTING' 65
            gumpresponse 6 tracking_gump_id
            waitforgump tracking_gump_id action_delay
        else
            overhead 'already hunting' 55
        endif

        gumpclose tracking_gump_id
    endif

else
    overhead 'Tracking already ON!' 55
endif

###################################
sysmsg 'STARTING...' 87
###################################

# all guard right now so summons protect char if we start script in the middle of a fight
if followers > 0
    say 'all guard me'
endif

wait action_delay

# BEFORE EVERY START
clearsysmsg
settimer 'last_sysmsg_timer' 0
setvar! reset_last_sysmsg_timer 0


while not dead 'self'

    if timer 'last_sysmsg_timer' > max_wait_for_last_sysmsg_to_suspect_gump
        overhead "✩ GUMP or LAG ✩" 33
        wait 1000

        # play an instrument as a way of playing a sound to notify about the captcha
        if findtype 3763|3740|10245|3742|3762 backpack as instrument
            dclick instrument
            wait action_delay
            break
        endif
    endif


    ########################################
    # MOST IMPORTANT ROUTINE - KEEP SUMMONS UP!
    ########################################

    # this is just a print to inform char is under summon_limit and is getting ready to summon up
    if auto_summon == 1 and followers < summon_max_limit
        if debug == 1
            sysmsg '[DEBUG] PREPARING TO RESUMMON' debug_msg_color
        endif

        if verbose == 1
            sysmsg 'UNDER SUMMON LIMIT. PREPARING TO SUMMON...' alert_msg_color
        endif




        foreach summon in 'summons'

            if debug == 1
                sysmsg 'CHECKING {{summon}}: {{index}}' default_sysmsg_color
            endif

            if list 'summons' == 1 and followers == 4
                if verbose == 1
                    sysmsg 'SUMMONS LIST ONLY HAS 1 SUMMON TYPE AND CHAR ALREADY HAVE 4 HAVE FOLLOWERS {{summon}}' warning_msg_color
                endif

                if debug == 1
                    sysmsg 'BREAKING 1 ON CHECKING SUMMON {{summon}}' warning_msg_color
                endif
                break
            elseif list 'summons' > 1 and followers == 5
                if verbose == 1
                    sysmsg 'SUMMONS LIST ONLY HAS 1 SUMMON TYPE AND CHAR ALREADY HAVE 5 HAVE FOLLOWERS {{summon}}' warning_msg_color
                endif

                if debug == 1
                    sysmsg 'BREAKING 2 ON CHECKING SUMMON {{summon}}' warning_msg_color
                endif
                break
            endif

            setvar! found_summon 0
            setvar! cast_summon_spell 0

            # determine summon name by whether char has necromancy or not
            if use_undead_summons == 1
                # on each iteration, clear and populate this list to set the undead alternative summon based on current summon
                if not listexists 'undead_summons'
                    createlist 'undead_summons'
                endif
                clearlist 'undead_summons'

                if 'earth' in summon
                    pushlist 'undead_summons' 'an ancient mummy'
                elseif 'fire' in summon
                    pushlist 'undead_summons' 'a lich'
                elseif 'air' in summon
                    pushlist 'undead_summons' 'a skeletal fiend'
                elseif 'daemon' in summon
                    pushlist 'undead_summons' 'a vampire thrall'
                elseif 'water' in summon
                    pushlist 'undead_summons' 'a rag witch'
                endif

                # if char is necro, make sure vengeful spirit is activated before summoning
                if list 'undead_summons' > 0
                    if timer 'vengeful_spirit_timer' >= 30000
                        if verbose == 1
                            sysmsg '>>> VENGEFUL SPIRIT...' spell_msg_color
                        endif
                        say '[vengefulspirit'
    
                        wait action_delay
    
                        if verbose == 1
                            sysmsg '>>> WITHER...' spell_msg_color
                        endif
    
                        say '[wither'
                        settimer 'vengeful_spirit_timer' 0
                    else
                        if verbose == 1
                            sysmsg 'Vengeful Spirit Cooldown..' on_cooldown_msg_color
                        endif
                    endif
                endif
            endif


            #########################
            # try to find a similir creature summon to see if we need to cast this one or skip to next one


            if findtype summon ground any 1 find_summon_range as summonserial
                if noto summonserial = friend
                    if verbose == 1
                        overhead '*found {{summon}}*' 91 summonserial
                    endif

                    setvar! found_summon 1
                endif
            # if the 'undead_summons' list has elements, we need to check for those undead summons as well
            elseif use_undead_summons == 1
                if list 'undead_summons' > 0
                    foreach necro_summon in 'undead_summons'
                        if findtype necro_summon ground any 1 find_summon_range as summonserial
                            if noto summonserial = friend
                                overhead '*found {{summon}}*' 91 summonserial
                                setvar! found_summon 1
    
                                # TESTING HERE (this break was disabled before)
                                # break
                            endif
                        endif
                    endfor
                endif
            endif

            # even if we found this summon type, we still might need to cast it (if only 1 summon in list for instance)
            if found_summon == 1
                # clearlist 'found_summon'

                # if theres only one summon in the 'summons' list, even if we found the summon above,
                # we still need to cast it again
                if list 'summons' == 1 and followers < 4
                    setvar! cast_summon_spell 1
                # if one of our summons is summ creature and we only have 3 followers, we can still cast another more usefull
                # summon before actually casting summ.creature
                elseif list 'summons' == 2 and followers <= 3 and inlist 'summons' 'summ. creature'
                    setvar! cast_summon_spell 1
                elseif list 'summons' >= 3 and followers <= 1
                    setvar! cast_summon_spell 1
                # else if theres more than one summon in 'summons' list and we didnt find this specific summon
                # we need to cast ig
                endif
            else
                if debug == 1
                    sysmsg '[DEBUG] setting to cast summon spell ({{summon}} not found)' debug_msg_color
                endif
                setvar! cast_summon_spell 1
            endif

            #########################
            # prepare to cast the summon spell for this summon
            if cast_summon_spell == 1


                foreach summonspell in 'summonspells'

                    sysmsg 'inside summonspell {{summonspell}}'
                    if summonspell in summon
                        sysmsg 'inside if summon {{summonspell}} in {{summon}}'

                        # first make a mana check for this specific summon spell
                        unsetvar! summon_spell_required_mana
                        setvar! summon_spell_required_mana 50

                        if 'creature' in summonspell or 'blade' in summonspell
                            setvar! summon_spell_required_mana 14
                        endif

                        if varexist summon_spell_required_mana
                            if mana < summon_spell_required_mana

                                while mana < summon_spell_required_mana
                                    if timer 'low_mana_for_summoning_warning_msg_timer' >= 2000
                                        sysmsg 'Meditating to summon {{summon}}...' warning_msg_color
                                        settimer 'low_mana_for_summoning_warning_msg_timer' 0
                                    endif
        
                                    if not findbuff 'actively meditating'
                                        skill 'meditation'
                                        wait action_delay
                                    endif
                                    wait 100
        
                                endwhile

                                if timer 'low_mana_for_summoning_warning_msg_timer' >= 2000
                                    if verbose == 1
                                        sysmsg "!!! LOW MANA FOR SUMMONING {{summon}}. (NEEDS {{summon_spell_required_mana}})..." alert_msg_color
                                        overhead "low mana for summoning" alert_msg_color
                                    endif

                                    settimer 'low_mana_for_summoning_warning_msg_timer' 0
                                endif
                            else
                                if verbose == 1
                                    sysmsg ">>> SUMMONING {{summon}}..." action_msg_color
                                endif
                                cast summonspell

                                if 'blade' in summonspell or 'vortex' in summonspell
                                    if verbose == 1
                                        sysmsg 'WAITING FOR {{summonspell}} TARGET..' alert_msg_color
                                        overhead 'Waiting for {{summonspell}} target..' alert_msg_color
                                    endif

                                    @settimer 'waiting_summon_timer' 0
                                    while not targetexists 'neutral' and timer 'waiting_summon_timer' < cast_summons_delay
                                        wft 10
                                        if insysmsg 'disturbed'
                                            @settimer 'waiting_summon_timer' 0
                                            if verbose == 1
                                                sysmsg 'BREAKING WHILE WAITING FOR SUMMONING {{summon}}' alert_msg_color
                                            endif

                                            wait spell_recovery_delay
                                            break
                                        endif
                                    endwhile

                                    if targetexists 'neutral'
                                        if verbose == 1
                                            sysmsg 'CASTING BLADE OR VORTEX IN GROUND' 55
                                        endif

                                        targetrelloc 0 1
                                        break
                                    endif
                                else
                                    @settimer 'waiting_summon_timer' 0
                                    while timer 'waiting_summon_timer' < cast_summons_delay
                                        wait 10
                                        if insysmsg 'disturbed'
                                            @settimer 'waiting_summon_timer' 0
                                            if verbose == 1
                                                sysmsg 'BREAKING WHILE WAITING FOR SUMMONING {{summon}}' alert_msg_color
                                            endif

                                            wait spell_recovery_delay
                                            break
                                        endif
                                    endwhile

                                    say 'all guard me'
                                endif

                                break

                            endif
                        endif
                    endif
                endfor

                sysmsg 'SETTING RESET FOR SUMMON'
                setvar! reset_last_sysmsg_timer 1
            # CLOSES if varexist cast_summon_spell
            endif
        endfor
    # CLOSES if auto_summon == 1
    endif


    #####################################
    # KEEP MOBS GUARDING PLAYER
    #####################################

    # TESTING also checking if dead so it doenst all guard before the 2 all follows for luring current lasttarget
    # if auto_all_guard == 1 and timer 'all_guard_timer' >= all_guard_delay
    if auto_all_guard == 1 and timer 'all_guard_timer' >= all_guard_delay
        say 'all guard me'
        settimer 'all_guard_timer' 0
        # setvar! reset_last_sysmsg_timer 1
    endif


    ########################################
    # KEEP CHAR BUFFED UP
    ########################################

    # reflect buff
    if followers >= summon_max_limit and diffhits < max_diffhits_before_buffing
        if use_magic_reflection == 1 and not findbuff 'magic reflection' and mana >= 4th_circle_spell_mana_cost
            sysmsg '>>> MAGIC REFLECT' spell_msg_color
            cast 'magic reflection'

            @settimer 'waiting_spell_timer' 0
            while not findbuff 'magic reflection' and timer 'waiting_spell_timer' < 3000
                wait 10
                if insysmsg 'disturbed' or insysmsg 'spell will not adhere' or insysmsg 'cannot cast a spell'
                    sysmsg 'BREAKING WHILE WAITING FOR MAGIC REFLECTION' warning_msg_color
                    wait spell_recovery_delay
                    break
                endif
            endwhile

            wait spell_recovery_delay

            if findbuff 'magic reflection'
                overhead '+MAGIC REFLECT' buff_msg_color
            endif

            setvar! reset_last_sysmsg_timer 1
        endif

    endif

    # reactive armor buff
    if followers >= summon_max_limit and diffhits < max_diffhits_before_buffing
        if use_reactive_armor == 1 and not findbuff 'reactive armor' and mana >= 3rd_circle_spell_mana_cost
            if verbose == 1
                sysmsg '>>> REACTIVE ARMOR' spell_msg_color
            endif

            cast 'reactive armor'
            @settimer 'waiting_spell_timer' 0
            while not findbuff 'reactive armor' and timer 'waiting_spell_timer' < 2000
                wait 10
                if insysmsg 'disturbed' or insysmsg 'spell will not adhere' or insysmsg 'cannot cast a spell'
                    if verbose == 1
                        sysmsg 'BREAKING WHILE WAITING FOR REACTIVE ARMOR' warning_msg_color
                    endif

                    wait spell_recovery_delay
                    break
                endif
            endwhile

            wait spell_recovery_delay

            if findbuff 'reactive armor'
                overhead '+reactive' buff_msg_color
            endif

            setvar! reset_last_sysmsg_timer 1
        endif
    endif




    # if we dont suspect gump, start lumbering and monitor char weight
    if reset_last_sysmsg_timer == 1
        sysmsg 'RESETING ON TIMER GT THAN 4!!: {{last_sysmsg_timer}}' 39
        settimer 'last_sysmsg_timer' 0
    endif

    if reset_last_sysmsg_timer == 0 and timer 'last_sysmsg_timer' < max_wait_for_last_sysmsg_to_suspect_gump
        # sysmsg 'Timer low...' 65

        while lhandempty
            if not findtype 'hatchet' true
                overhead "| You are out of hatchets|"
                wait 1500
                # script "WaitAndWatch"
            endif
            if findtype 'hatchet' backpack as hatch
                dclick hatch
                overhead "|equiped hatchet|"
                wait 1000
                settimer 'last_sysmsg_timer' 0
            endif
        endwhile

        # if timer 'last_sysmsg_timer' < max_wait_for_last_sysmsg_to_use_hatchet and not lhandempty

        settimer 'waiting_hatchet_target_timer' 0

        while not targetexists 'neutral' and timer 'last_sysmsg_timer' < max_wait_for_last_sysmsg_to_use_hatchet and not lhandempty
            if timer 'waiting_hatchet_target_timer' > max_wait_for_hatchet_target
                sysmsg 'BREAKING CLICKING HATCHET' 37
                break
            endif

            sysmsg 'USING ITEM IN HAND'
            hotkey 'Use item in Hand'
            waitfortarget max_wait_for_hatchet_target
            # waitfortarget max_wait_for_last_sysmsg_to_use_hatchet
        endwhile

        if targetexists 'neutral'
            # sysmsg 'Lumbering...' 65
            target 'self'
        endif

        wait max_wait_for_last_sysmsg_to_use_hatchet
        # endif


        ##############################################
        # LUMBER MAPS ROUTINE
        # if heavy and there are packies nearby, unload

        if findtype 'map' backpack 2799 any as lumber_map
            getlabel lumber_map lumber_map_label
            if "completed by" in lumber_map_label
                overhead 'LUMBER MAP COMPLETE!' 90

                # drop completed ore map
                lift lumber_map 1
                wait action_delay
                overhead "dropping completed lumber map"
                if findtype 'barrel' ground 0 1 2 as trashcan
                    sysmsg "Dropping Completed Map On Trash Barrel" sysmsgs_color
                    drop trashcan -1 -1 0
                else
                    sysmsg "Dropping Completed Map On The Ground" sysmsgs_color
                    droprelloc 0 0
                endif

                clearsysmsg
                stop
            else
                sysmsg 'Doing Lumber Map...' 49
                setvar! reset_last_sysmsg_timer 1
            endif
        endif


        ##############################################
        # UNLOADING ROUTINE
        # if heavy and there are packies nearby, unload
        if diffweight <= max_diffweight_before_unloading and findtype LOGS backpack

            if not listexists 'full_packies'
                createlist 'full_packies'
            endif

            if list 'packies' > 0 and list 'full_packies' > 0 and list 'packies' == list 'full_packies'
                overhead 'all packies full! going home!' 53
                sysmsg 'ALL PACKIES FULL! GOING HOME!' 53
                sysmsg 'ALL PACKIES FULL! GOING HOME!' 53
                setvar! recall_home_now 1

            elseif list 'packies' > 0
                foreach packanimal in 'packies'

                    unsetvar! pack_heavy

                    # check packie weight to determine if its full or not
                    if counttype LOGS packanimal >= max_ores_in_packie
                        setvar! pack_heavy true
                    elseif counttype LOGS packanimal >= 200 and counttype BOARDS packanimal >= 500
                        setvar! pack_heavy true
                    elseif counttype LOGS packanimal >= 150 and counttype BOARDS packanimal >= 800
                        setvar! pack_heavy true
                    elseif counttype LOGS packanimal >= 100 and counttype BOARDS packanimal >= 1100
                        setvar! pack_heavy true
                    endif

                    # add or remove packie to full 0packies list based on if its heavy or not
                    if varexist pack_heavy
                        if not inlist 'full_packies' packanimal
                            overhead 'adding to full list' 54 packanimal
                            pushlist 'full_packies' packanimal
                        endif
                        # sysmsg 'PACKIE HAS MORE THAN 100 ORES' 40
                        # overhead 'PACKIE HAS MORE THAN 100 ORES' 40
                        overhead '! heavy !' 34 packanimal
                    else
                        if inlist 'full_packies' packanimal
                            overhead 'removing from full list' 52 packanimal
                            poplist 'full_packies' packanimal
                        endif
                    endif

                    if not inlist 'full_packies' packanimal
                        # getlabel packanimal packie_label
                        # sysmsg packie_label 99

                        # call packies if they are not within 2 tiles
                        while not find packanimal ground any any 2
                            say 'all follow me'
                            wait action_delay
                        endwhile

                        # dclick packanimal
                        # wait action_delay
                        # if this pet is already full, we move to the next one

                        while findtype LOGS backpack as logs and counttype LOGS packanimal < max_logs_in_packie
                            sysmsg '>>> MOVING LOGS TO PACKIE' 56
                            overhead '*unloading logs*' 56
                            overhead '*unloading logs*' 56 packanimal
                            lift logs 999
                            wait action_delay
                            drop packanimal -1 -1 0
                            wait action_delay
                            if findtype LOGS ground any any 1
                                # put this animal to the end of the list so we use the next one next time
                                overhead 'heavy?? moving to end of list' 53 packanimal
                                sysmsg 'Found logs on ground. Pet is probably heavy... Moving To End Of List' 53
                                pushlist 'full_packies' packanimal
                            endif
                        #
                        endwhile

                        # BOARDS. this isnt pretty, its duplicated from above. ill refactor it later
                        while findtype BOARDS backpack as boards and counttype BOARDS packanimal < 2000
                            sysmsg '>>> MOVING BOARDS TO PACKIE' 56
                            overhead '*unloading boards*' 56
                            overhead '*unloading boards*' 56 packanimal
                            lift boards 999
                            wait action_delay
                            drop packanimal -1 -1 0
                            wait action_delay
                            if findtype BOARDS ground any any 1
                                # put this animal to the end of the list so we use the next one next time
                                overhead 'heavy?? moving to end of list' 53 packanimal
                                sysmsg 'Found boards on ground. Pet is probably heavy... Moving To End Of List' 53
                                pushlist 'full_packies' packanimal
                            endif

                        endwhile


                    endif
                endfor
                #
                setvar! reset_last_sysmsg_timer 1
                # settimer 'last_sysmsg_timer' 0


            else
                overhead '! HEAVY !' 90
            endif
            # end if list 'packies' > 0

        endif
        # end if diffweight > max_diffweight_before_unload
    endif



    ###############################################
    # JOURNAL MESSAGES CHECKS
    # we need to first check for pks or else the other msgs might not allow us to get to this check
    if insysmsg 'now tracking'
            sysmsg '>>> PK...' 54
            sysmsg '>>> PK...' 54
            sysmsg '>>> PK...' 54
            overhead '!! PK !!' 54
            overhead '!! PK !!' 54
            overhead '!! PK !!' 54

        if recall_to_escape_pks == 1
            sysmsg '>>> ESCAPING PK!!!' 41
            overhead '!! ESCAPING PK !!' 41
            setvar! recall_home_now 1
        endif



    # handle world saves
    elseif insysmsg "The world is saving"
        overhead '*WORLD SAVING*' 90
        while not insysmsg 'World save complete'
            wait 100
            if timer 'waiting_save' >= 5000
                sysmsg 'BREAKING WAITING FOR SAVE' 49
                break
            endif
        endwhile

        if insysmsg 'World save complete'
            overhead '*save complete!*' 90
            setvar! reset_last_sysmsg_timer 1
        endif

    # handle tools breaking
    elseif insysmsg "You broke your axe"
        overhead 'HATCHET BROKE!' 90

        if not lhandempty and not findtype 'hatchet' lefthand
            overhead 'undressing hands for hatchet'
            hotkey "Undress Both Hands"
            wait action_delay
        endif

        if lhandempty
            if findtype 'hatchet' backpack as hatch
                dclick hatch
                overhead "|equiped hatchet|"
                wait 1000
            else
                overhead "!! You are out of hatchet !!"
                setvar! recall_home_now 1
            endif
        endif

        setvar! reset_last_sysmsg_timer 1


    # no resources where char is
    elseif insysmsg "You do not see any harvestable resources nearby"
        if auto_walk_to_direction == 1
            foreach direction in 'direction_to_walk'
                walk direction
                break
            endfor
        endif

        setvar! reset_last_sysmsg_timer 1
        overhead '| NO WOOD HERE |' 54

        if auto_walk_randomly == 1
            random 8
            if insysmsg 'Random: 1'
                walk 'south'
                walk 'south'
                walk 'south'
            elseif insysmsg  'Random: 2'
                walk 'down'
                walk 'down'
                walk 'down'
            elseif insysmsg  'Random: 3'
                walk 'east'
                walk 'east'
                walk 'east'
            elseif insysmsg  'Random: 4'
                walk 'right'
                walk 'right'
                walk 'right'
            elseif insysmsg  'Random: 5'
                walk 'north'    
                walk 'north'
                walk 'north'
            elseif insysmsg  'Random: 6'
                walk 'up'
                walk 'up'
                walk 'up'
            elseif insysmsg  'Random: 7'
                walk 'west'
                walk 'west'
                walk 'west'
            elseif insysmsg  'Random: 8'
                walk 'left'
                walk 'left'
                walk 'left'
            endif
        endif




    # lumber fail message
    elseif insysmsg "You hack"
        setvar! reset_last_sysmsg_timer 1
        overhead '| hacked |'



    # when char is on cooldown for having traveled recently
    elseif insysmsg 'You have recently traveled and must wait'
        setvar! reset_last_sysmsg_timer 1
        overhead '! travel harvest cooldown !' 43


    # action cooldowns (when sysmsg prints 'You must wait...') will break the macro, so we need to get them as well
    elseif insysmsg "You must wait to perform another action"
        setvar! reset_last_sysmsg_timer 1
        overhead '! action cooldown !' 54

    # skill cooldowns will break the macro, so we need to get them as well
    elseif insysmsg "You must wait a few moments before using another skill"
        setvar! reset_last_sysmsg_timer 1
        overhead '! skill cooldown !' 54

    # action cooldowns (when sysmsg prints 'You must wait...') will break the macro, so we need to get them as well
    elseif insysmsg "Harvesting is not allowed in this area"
        setvar! reset_last_sysmsg_timer 1
        overhead 'harvest not allowed. move!' 53



# this msg is overhead, not sysmsg, thus we cant know if a char is doing a lumbermap
    elseif insysmsg 'You gather some'
        overhead '| lumber map |' 15
        setvar! reset_last_sysmsg_timer 1


    # I TRIED LOOPING THROUGH A LIST INSTEAD OF USING MULTIPLE IF/ELSE AND DIDNT WORK, THE LOOP BREAKS THE MACRO
    elseif insysmsg 'Dullwood'
        overhead '| dullwood |' 248
        setvar! reset_last_sysmsg_timer 1
    elseif insysmsg 'shadowwood'
        overhead '| shadowwood |' 193
        setvar! reset_last_sysmsg_timer 1
    elseif insysmsg 'Copperwood'
        overhead '| copperwood |' 248
        setvar! reset_last_sysmsg_timer 1
    elseif insysmsg 'Bronzewood'
        overhead '| bronzewood |' 248
        setvar! reset_last_sysmsg_timer 1
    elseif insysmsg 'Goldenwood'
        overhead '| goldenwood |' 55
        setvar! reset_last_sysmsg_timer 1
    elseif insysmsg 'Rosewood'
        overhead '| rosewood |' 55
        setvar! reset_last_sysmsg_timer 1
    elseif insysmsg 'Verewood'
        overhead '| verewood |' 55
        setvar! reset_last_sysmsg_timer 1
    elseif insysmsg 'Valewood'
        overhead '| valewood |' 33
        setvar! reset_last_sysmsg_timer 1
    elseif insysmsg 'Avarwood'
        overhead '| avarwood |' 33
        setvar! reset_last_sysmsg_timer 1
    # regular logs have to be checked last because all of the above also have the word 'logs'
    # so it was always thinking it got regular logs, even when getting colored
    elseif insysmsg 'Logs'
        overhead '| logs |' 15
        setvar! reset_last_sysmsg_timer 1




    # catch captcha successful msgs
    elseif insysmsg "Captcha successful"
        overhead 'captcha anwsered succesfully' 90
        sysmsg 'Captcha Anwsered Succesfully!' 90


    # catch captcha failure msgs
    elseif insysmsg "Due to previous captcha failures"
        overhead '! resource locked !' 33
        sysmsg 'CAPTCHA FAILED AND CHAR IS RESOURCE LOCKED. STOPPING MACRO...' 33
        stop


    endif



    ########################################
    # GO HOME AND UNLOAD ROUTINE
    ########################################
    if recall_home_now == 1
        if skill 'magery' == 0 or counttype "Black Pearl%s%" == 0 or counttype "Blood Moss" == 0 or counttype "Mandrake Root%s%" == 0
            if counttype "Recall"
                overhead 'no regs. trying scroll...'
                setvar! use_recall_scroll true
            else
                overhead 'no regs. trying charges...'
                setvar! use_charges true
            endif
        endif

        # pick which book should script recall to
        if findtype 'runetome' backpack as rtome
            setvar! recall_book rtome
            setvar! recall_book_gump_id 167090027
            setvar! recall_by_charge_btn_number runetome_rune_position
        elseif findtype 'runebook' backpack as rbook
            setvar! recall_book rbook
            setvar! recall_book_gump_id 1551740969
            setvar! recall_by_charge_btn_number runebook_rune_position
        elseif findtype 'recall rune' backpack as recall_rune
            setvar! recall_book recall_rune
            setvar! recall_book_gump_id 1551740969
            setvar! recall_by_charge_btn_number runebook_rune_position
        endif

        if varexist recall_book
            if not varexist use_charges
                unsetvar! use_charges
                hotkey 'Recall'
                waitfortarget 3500
                target recall_book
            else
                dclick recall_book
                waitforgump recall_book_gump_id 600
                gumpresponse recall_by_charge_btn_number recall_book_gump_id
            endif

            unsetvar! recall_book
        endif

        wait 2500


        # after escaping, smelt ores from char
        while findtype LOGS backpack as ores_from_backpack
            overhead '*cutting boards*' 49 packanimal
            sysmsg '> Cutting boards from Pack Animal' 49
            dclick ores_from_backpack
            wait action_delay
        endwhile


        # after escaping, smelt ores from all packies
        if list 'packies' > 0
            foreach packanimal in 'packies'

                dclick packanimal
                wait action_delay
                # smelt ores
                while findtype LOGS packanimal any any 2 as ores_from_packie
                    overhead '*cutting boards*' 49 packanimal
                    sysmsg '> Cutting boards from Pack Animal' 49
                    dclick ores_from_packie
                    wait action_delay
                endwhile
            endfor
        endif

        # unload everything on resource stockpile
        if findtype 'resource container' ground any any 2 as stockpile
            setvar! resource_stockpile stockpile
            menu resource_stockpile 0
            wft 600
            if targetexists 'neutral'
                sysmsg '> Restocking Resource Stockpile...' sysmsgs_color
                target 'self'
            endif

            # restock stockpile from packies
            if list 'packies' > 0 and varexist resource_stockpile
                foreach packanimal in 'packies'
                    if noto packanimal = friend
                        sysmsg '> Restocking Stockpile From Pack Animal...' sysmsgs_color
                        menu resource_stockpile 0
                        wft 600
                        if targetexists 'neutral'
                            overhead "unloading on stockpile" 56 packanimal
                            target packanimal
                        endif
                    endif
                endfor
            endif
            if gumpexists 1859005118
                gumpclose
            endif
        endif

        setvar! recall_home_now 0
        stop

    endif
    # END GO HOME AND UNLOAD ROUTINE
    ########################################


    ########################################
    # HANDLE POISON
    ########################################

    if poisoned
        if findtype 'orange potion' backpack
            sysmsg 'Curing poison with potion...' 90
            hotkey 'Drink Cure'
        elseif magery >= 50 and counttype 'Garlic' > 0 and counttype 'Ginseng' > 0
            sysmsg 'Curing poison with magery...' 90
            cast 'Cure'

            @settimer 'waiting_target_timer' 0
            while not targetexists 'beneficial' and timer 'waiting_target_timer' < 1500
                wait 100
                if insysmsg 'disturbed' or insysmsg 'cannot cast a spell while frozen'
                    sysmsg 'BREAKING WHILE WAITING FOR GREATER HEAL TARGET'
                    break
                endif
            endwhile

            if targetexists 'beneficial'
                target 'self'
            endif
        elseif healing >= 50 and counttype 'clean bandage%s%' > 0
            # if not bandaging
            if bandaging == 0
                if debug == 1
                    sysmsg '[DEBUG] bandage 001'
                endif
                overhead '*applying bandages*' 65
                hotkey 'Bandage Self'

                wait action_delay
            elseif bandaging > 10
                overhead '10+ secs till next bandage!' 52
            elseif bandaging > 5
                overhead '5+ secs till next bandage!' 52
            else
                overhead 'less than 5 secs till next bandage!' 52
            endif
        endif
    endif



    ########################################
    # MAINTAIN CHAR HP
    ########################################

    if diffhits > max_diffhits_before_starting_heal_routine
        # heal with pots
        if diffhits > max_diffhits_before_healing_with_potion
            if findtype 'yellow potion' backpack
                hotkey 'Drink Heal'
                wait action_delay
            endif
        endif

        # heal with healing
        if diffhits > max_diffhits_before_healing_with_bandages and skill 'healing' >= min_healing_to_use_bandages
            # if not bandaging
            if bandaging == 0
                if debug == 1
                    sysmsg '[DEBUG] bandage 002'
                endif
                overhead '*applying bandages*' 65
                hotkey 'Bandage Self'

                wait action_delay
            elseif bandaging > 10
                overhead '10+ secs till next bandage!' 52
            elseif bandaging > 5
                overhead '5+ secs till next bandage!' 52
            else
                overhead 'less than 5 secs till next bandage!' 52
            endif
        endif

        # heal with magery
        if diffhits > max_diffhits_before_healing_with_magery and skill 'magery' >= 50 and mana >= 11
            cast 'greater heal'

            @settimer 'waiting_target_timer' 0
            while not targetexists 'beneficial' and timer 'waiting_target_timer' < 3500
                wait 100
                if insysmsg 'disturbed' or insysmsg 'cannot cast a spell while frozen'
                    sysmsg 'BREAKING WHILE WAITING FOR GREATER HEAL TARGET'
                    break
                endif
            endwhile

            if targetexists 'beneficial'
                hotkey 'Target Self'
            endif
        endif
    endif



    ########################################
    # DEFEND AGAINST MONSTERS ROUTINE
    ########################################

    if diffhits > max_diffhits_before_starting_defense_routine
        if debug == 1
            sysmsg '[DEBUG]: ENTERED DEFENSE ROUTINE' debug_msg_color
        endif

        if not find 'last' ground any any 2 or not dead 'last' or noto 'last' != hostile
            overhead 'searching for mobs to kill...' 52
            hotkey 'Next Non-Friendly Monster Target'
            wait action_delay

            # if there is not a captcha present already, reset timer to make sure the script wont bug after killing the mob
            if timer 'last_sysmsg_timer' < max_wait_for_last_sysmsg_to_suspect_gump

                if debug == 1
                    sysmsg '[DEBUG]: RESET 014 DEFEND 1' debug_msg_color
                endif

                sysmsg 'Flaging to reset catpcha timer while searching for mobs...' 54
                setvar! reset_last_sysmsg_timer 1
            endif

        endif

        if debug == 1
            sysmsg '[DEBUG]: RESET 014 AFTER DEFEND 1' debug_msg_color
        endif

        while find 'last' ground any any max_mob_range_to_attack and not dead 'last'

            if debug == 1
                sysmsg '[DEBUG]: INSIDE WHILE DEFEND LOOP' debug_msg_color
            endif

            if lasttarget == self
                overhead 'cancelling self as target!' 52
                hotkey 'Cancel Current Target'

                if debug == 1
                    sysmsg '[DEBUG]: RESET 015A DEFEND 2A CANCEL SELF TARGET' debug_msg_color
                endif
            elseif noto lasttarget == friendly
                overhead 'cancelling friendly target!' 52
                hotkey 'Cancel Current Target'

                if debug == 1
                    sysmsg '[DEBUG]: RESET 015 DEFEND 2 CANCEL TARGET' debug_msg_color
                endif

                setvar! reset_last_sysmsg_timer 1
            elseif noto lasttarget != friend and noto lasttarget != friendly
                overhead '|| LUMBER TARGET ||' 90 'last'
                setvar found_mob 1

                if not varexist entered_combat_mode
                    setvar! entered_combat_mode 1
                endif

                #make sure we dont have a captcha gump before trying to arm for fightning
                if timer 'last_sysmsg_timer' < max_wait_for_last_sysmsg_to_suspect_gump
                    setvar! reset_last_sysmsg_timer 1

                    overhead '*ATTACKING*' 39 lasttarget
                    sysmsg 'Hostile Last Target Detected! Entering Defense Routine...' 56

                    # equip hatchet if needed
                    if skill 'swordsmanship' > 0
                        if not findtype 'hatchet' righthand

                            if findtype 'hatchet' backpack as hatchet
                                # undress hands if necessary to equip pickaxe found
                                if not lhandempty and not rhandempty
                                    overhead 'undressing hands to put hatchet' 54
                                    hotkey "Undress Both Hands"
                                    wait action_delay
                                endif

                                if debug == 1
                                    sysmsg '[DEBUG]: EQUIPING HATCHET' debug_msg_color
                                endif

                                setvar! found_weapon 1
                                dclick hatchet
                                wait action_delay
                            else
                                overhead 'OUT OF HATCHETS!' 39
                            endif
                        endif
                    else
                        # first make sure char is empty handed to equip the weapon afterwards
                        if not lhandempty and not rhandempty
                            overhead 'undressing hands to put combat weaopn' 54
                            hotkey "Undress Both Hands"
                            wait action_delay

                        # if char is not macer, we got to equip a different weaopn equip weapon if needed according to weaopn skill
                        else
                            foreach weapon_type in 'char_combat_skill_weapons'
                                if findtype weapon_type backpack as weap
                                    setvar! found_weapon 1
                                    dclick weap
                                    overhead "|equiped {{weapon_type}} weapon|"
                                    wait action_delay
                                    break
                                endif
                            endfor
                        endif

                        if not varexist found_weapon and lhandempty and rhandempty
                            overhead 'CANT FIND WEAPON'
                        endif

                        unsetvar! found_weapon
                    endif

                    if not rhandempty or not lhandempty
                        sysmsg 'Attacking last target'
                        hotkey 'Attack Last Target'
                    endif
                endif


                # HANDLE POISON
                if poisoned
                    if findtype 'orange potion' backpack
                        sysmsg 'Curing poison with potion...' 90
                        hotkey 'Drink Cure'
                    elseif magery >= 50 and counttype 'Garlic' > 0 and counttype 'Ginseng' > 0
                        sysmsg 'Curing poison with magery...' 90
                        cast 'Cure'

                        @settimer 'waiting_target_timer' 0
                        while not targetexists 'beneficial' and timer 'waiting_target_timer' < 1500
                            wait 100
                            if insysmsg 'disturbed' or insysmsg 'cannot cast a spell while frozen'
                                sysmsg 'BREAKING WHILE WAITING FOR GREATER HEAL TARGET'
                                break
                            endif
                        endwhile

                        if targetexists 'beneficial'
                            target 'self'
                        endif
                    elseif healing >= 50 and counttype 'clean bandage%s%' > 0
                        # if not bandaging
                        if bandaging == 0
                            overhead '*applying bandages*' 65
                            if debug == 1
                                sysmsg '[DEBUG] bandage 003'
                            endif
                            hotkey 'Bandage Self'

                            wait action_delay
                        elseif bandaging > 10
                            overhead '10+ secs till next bandage!' 52
                        elseif bandaging > 5
                            overhead '5+ secs till next bandage!' 52
                        else
                            overhead 'less than 5 secs till next bandage!' 52
                        endif
                    endif
                endif

                # MAINTAIN CHAR HP
                if diffhits > 0
                    # heal with pots
                    if diffhits > max_diffhits_before_healing_with_potion
                        if findtype 'yellow potion' backpack
                            hotkey 'Drink Heal'
                            wait action_delay
                        endif
                    endif

                    # heal with healing
                    if diffhits > max_diffhits_before_healing_with_bandages and skill 'healing' >= min_healing_to_use_bandages
                        # if not bandaging
                        if bandaging == 0
                            overhead '*applying bandages*' 65
                            if debug == 1
                                sysmsg '[DEBUG] bandage 003'
                            endif
                            hotkey 'Bandage Self'

                            wait action_delay
                        elseif bandaging > 10
                            overhead '10+ secs till next bandage!' 52
                        elseif bandaging > 5
                            overhead '5+ secs till next bandage!' 52
                        else
                            overhead 'less than 5 secs till next bandage!' 52
                        endif
                    endif

                    # heal with magery
                    if diffhits > max_diffhits_before_healing_with_magery and skill 'magery' >= 50 and mana >= 11
                        cast 'greater heal'

                        @settimer 'waiting_target_timer' 0
                        while not targetexists 'beneficial' and timer 'waiting_target_timer' < 3500
                            wait 100
                            if insysmsg 'disturbed' or insysmsg 'cannot cast a spell while frozen'
                                sysmsg 'BREAKING WHILE WAITING FOR GREATER HEAL TARGET'
                                break
                            endif
                        endwhile

                        if targetexists 'beneficial'
                            hotkey 'Target Self'
                        endif
                    endif
                endif

            # END elseif noto lasttarget != friend and noto lasttarget != friendly
            endif

        endwhile

        if dead 'last' and varexist found_mob
            unsetvar found_mob

            if debug == 1
                sysmsg '[DEBUG]: RESET 017 DEFEND 4 AFTER LOOP' debug_msg_color
            endif

            setvar! reset_last_sysmsg_timer 1
        endif

        if debug == 1
            sysmsg '[DEBUG]: LAST ENDIF DEFEND ROUTINE' debug_msg_color
        endif

        # setvar! reset_last_sysmsg_timer 1

    # END if diffhits > max_diffhits_before_starting_defense_routine
    endif

    # check if we got any sysmsg that should reset the timer in each iteration
    if reset_last_sysmsg_timer == 1
        setvar! reset_last_sysmsg_timer 0
        # RESET THE TIMER
        settimer 'last_sysmsg_timer' 0
        clearsysmsg
    endif





endwhile


#################################
# CHANGELOG

# v0.2.1
# - Removes 'backpack' from reagents sources on findtype in case they are in the new reagent satchel so recall wont fail
# - No longer unequips hatchet to equip combat weapon since now hatchets have the same dmg/level as other axes and benefit from Lumberjacking
#
# v0.2.0
# - Switches from list configs back to variables using setvar!
# - Adds gump serial to gumpresponse command on recall routine
# - Adds Archery to supported weapon skills when defending against monsters
#
# v0.0.10
# - Fixed bug where char would keep equipping all combat weaopns found in backpack while fightning mobs
# - Added startup warnings about script requirements
#
# v0.0.9
# - Handles 'You broke your axe' sysmsgs
#
# v0.0.8
# - Fixes error happening on chars without healing due to script trying to access a variable that is only created on chars with healing (tkx to @BaLLa#7588 for finding and reporting it)
# - Fixed blue chars not finding packies (tkx to @renatoestevao#8568  for subimitting a PR)
#
# v0.0.7
# - Makes char remove hatchet to equip combat weapon to fight monsters
# - Fixes calling to wrong variable name in some parts of the code
#
# v0.0.6
# - Searches a list of weapons intead of using just hatchets and clubs
#
# v0.0.5
# - Fix missing endif that was breaking the macro when i captcha was detected

# v0.0.4
# - Adds missing list 'use_charges' for using charges when escaping PKs
# - Enhances unloading routine (based on my miner script unload routine)
#
# v0.0.3
# - Fix captcha pause check
# - Stops double clicking packie to open packpack when unloading logs while heavy
# - Adds variables to control rune slot button numbers while escaping PKs
# - Adds checks if char has magery or regs before trying to cast recall, or use scrolls / charges to escape PK
# - Fix colored logs check on journal messages
#
# v0.0.2
# - Adds unloading routine after escaping PKs and turn logs into boards
# - Makes sysmsgs checks even when gump is detected (so char can escape PKs even when answering gumps)
#
# v0.0.1
# - Initial release
#
